<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.lbq.searchboot.mapper.PoemMapper">

    <resultMap id="BaseResultMap" type="org.lbq.searchboot.bean.Poem">
            <id property="id" column="id" jdbcType="VARCHAR"/>
            <result property="name" column="name" jdbcType="VARCHAR"/>
            <result property="author" column="author" jdbcType="VARCHAR"/>
            <result property="type" column="type" jdbcType="VARCHAR"/>
            <result property="content" column="content" jdbcType="VARCHAR"/>
            <result property="href" column="href" jdbcType="VARCHAR"/>
            <result property="authordes" column="authordes" jdbcType="VARCHAR"/>
            <result property="origin" column="origin" jdbcType="VARCHAR"/>
            <result property="categoryid" column="categoryId" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,name,author,
        type,content,href,
        authordes,origin,categoryId
    </sql>
    <insert id="insertPoem" parameterType="org.lbq.searchboot.bean.Poem">
     insert into  t_poem (id,name, author, type, content, href, authordes, origin, categoryid) values (#{poem.id},#{poem.name}, #{poem.author}, #{poem.type}, #{poem.content}, #{poem.href}, #{poem.authordes}, #{poem.origin}, #{poem.categoryid})
    </insert>

    <update id="updatePoem" parameterType="org.lbq.searchboot.bean.Poem">
     update  t_poem  tp set tp.name=#{poem.name},tp.author=#{poem.author},tp.type=#{poem.type},tp.content=#{poem.content},tp.href=#{poem.href},tp.authordes=#{poem.authordes},tp.origin=#{poem.origin},tp.categoryId=#{poem.categoryid}
     where tp.id=#{poem.id}
    </update>

    <delete id="deletePoemId" parameterType="int">
    delete  from t_poem where t_poem.id=#{id}
    </delete>


    <select id="FindPoemList" resultMap="BaseResultMap">
        select tp.* from t_poem tp
    </select>

    <select id="getAuthorSize" resultType="org.lbq.searchboot.Vo.CountVo">
        select  author,COUNt(*) as size
        from t_poem
        GROUP BY author
        HAVING COUNt(*) > 10
        ORDER BY size desc
    </select>
</mapper>
